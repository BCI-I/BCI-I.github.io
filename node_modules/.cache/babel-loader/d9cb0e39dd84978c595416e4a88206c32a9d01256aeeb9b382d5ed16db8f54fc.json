{"ast":null,"code":"var _jsxFileName = \"/Users/federicoclaudi/Documents/Github/BCI-I.github.io/src/pages/HackathonMaterials.js\";\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport Navbar from '../components/Nav';\nimport { Red, Blue, Green, Yellow, White } from '../components/Highlights';\nimport Note from '../components/Note';\nimport { ContentSection, ContentSubSection } from '../components/ContentSection';\n// import CodeBlock from '../components/Code';\n\nimport { CodeBlock, dracula } from \"react-code-blocks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HackathonMaterialsPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"BCI Initiative - MIT Hackathon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentSection, {\n      title: \"Preparing for the Hackahton\",\n      title_id: \"#before\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"In order to access some of the software needed you will need:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"a \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/join\",\n            target: \"_blank\",\n            children: \"GitHub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this), \"account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"a \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://hub.docker.com/signup\",\n            target: \"_blank\",\n            children: \"Docker Hub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this), \" acount\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"a \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://hub.duckietown.com/\",\n            target: \"_blank\",\n            children: \"Duckietown Hub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }, this), \" account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Making sure that you have all accounts ready ahead of the competition will help you save time that you can spend hacking instead.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Note, {\n        title: \"Hardware requirements\",\n        color: \"salmon\",\n        children: [\"To participate in the hackathon, each team needs to be able to stream data from the EEG headset and to send and receive data to and from the Duckiebot. You will need to rely on the manufacturer's software to do so, and this means that you will need devices that can run the software.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 27\n        }, this), \"For the Duckiebot you will need either Linux or MacOS laptops (ideally with Intel silicon). For the EEG headset you will need an Android device with Bluetooth connectivity. We strongly encourage all teams to ensure that they have access to such devices.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"We will have a very limited number of Android devices available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \"for teams that do not have access to one, but we cannot guarantee that we will have enough for everyone. Please fill in \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://forms.gle/FQkiAFPthqyqAbGh6\",\n          target: \"_blank\",\n          children: \" this form \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this), \"let us know ahead of time what hardware you or your team have available to help us plan accordingly.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentSection, {\n      title: \"X.on EEG headset\",\n      title_id: \"#eeg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://xon-eeg.com/\",\n          target: \"_blank\",\n          children: \"X.on EEG headset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), \" is an affordable and easy to use EEG headset. It's light and wireless, making it very portable yet it's capable of recording high quality EEG data from its 8 channels (+ reference) and 3-axis accelerometer.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"To learn more about the X.on design and specifications, you can check the website for the \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://xon-eeg.com/\",\n          target: \"_blank\",\n          children: \"X.on EEG headset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), \". On the day of the hackahton, we will provide the \", /*#__PURE__*/_jsxDEV(Yellow, {\n          children: \"X.on user manual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 62\n        }, this), \"describing how to setup and use the headset (also seet this \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.youtube.com/watch?v=2HwxGtheWJ8\",\n          target: \"_blank\",\n          children: \" video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this), \". )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContentSubSection, {\n        title: \"X.on software\",\n        title_id: \"xsoftware\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(Green, {\n            children: \"Streaming data from the X.on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), \". To stream EEG data from the headset, you will need to connect it to to an Android device with a Bluetooth connection. The X.on user manual will describe how to do this. Once connected, go to \\\"monitor\\\" and the X.on app will stream the data over WiFi using the \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://labstreaminglayer.org/#/\",\n            target: \"_blank\",\n            children: \"Lab Streaming Layer (LSL)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 32\n          }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 22\n          }, this), \"To \", /*#__PURE__*/_jsxDEV(Blue, {\n            children: \"read the data on your laptop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 20\n          }, this), \", you can use the \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/labstreaminglayer/pylsl\",\n            target: \"_blank\",\n            children: \"pylsl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this), \" Python library. We recomend familiarizing yourself with both LSL and pylsl before the hackathon.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 22\n          }, this), \"This \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 22\n          }, this), \" shows how to stream eeg data in Python using pylsl:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          text: ('Example program to show how to read a ', 'multi-channel time series from LSL.'),\n          language: \"phython\",\n          theme: dracula\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = HackathonMaterialsPage;\nexport default HackathonMaterialsPage;\nvar _c;\n$RefreshReg$(_c, \"HackathonMaterialsPage\");","map":{"version":3,"names":["React","Helmet","Navbar","Red","Blue","Green","Yellow","White","Note","ContentSection","ContentSubSection","CodeBlock","dracula","jsxDEV","_jsxDEV","HackathonMaterialsPage","children","fileName","_jsxFileName","lineNumber","columnNumber","title","title_id","href","target","color","text","language","theme","_c","$RefreshReg$"],"sources":["/Users/federicoclaudi/Documents/Github/BCI-I.github.io/src/pages/HackathonMaterials.js"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport Navbar from '../components/Nav';\nimport { Red, Blue, Green, Yellow, White } from '../components/Highlights';\nimport Note from '../components/Note';\nimport { ContentSection, ContentSubSection } from '../components/ContentSection';\n// import CodeBlock from '../components/Code';\n\nimport { CodeBlock, dracula } from \"react-code-blocks\";\n\nconst HackathonMaterialsPage = () => {\n\n\n    return (\n        <div>\n            <Helmet>\n                <title>BCI Initiative - MIT Hackathon</title>\n                \n            </Helmet>\n\n            <Navbar />\n\n            <ContentSection title=\"Preparing for the Hackahton\" title_id=\"#before\">\n            <p>\n            In order to access some of the software needed you will need:\n            </p>\n\n            <ul>\n            <li>a <a href=\"https://github.com/join\" target=\"_blank\">GitHub</a>\n                account</li>\n            <li>a <a href=\"https://hub.docker.com/signup\" target=\"_blank\">Docker\n                Hub</a> acount</li>\n            <li>a <a href=\"https://hub.duckietown.com/\" target=\"_blank\">Duckietown\n                Hub</a> account</li>\n            </ul>\n\n            <p>\n            Making sure that you have all accounts ready ahead of the competition will\n            help you save time that\n            you can spend hacking instead.\n            </p>\n\n            <Note title=\"Hardware requirements\" color=\"salmon\">\n            To participate in the hackathon, each team needs to be able to stream\n            data from the EEG headset and to\n            send and receive data to and from the Duckiebot. You will need to rely\n            on the manufacturer's software to do so,\n            and this means that you will need devices that can run the\n            software.<br/><br/>\n\n            For the Duckiebot you will need either Linux or MacOS laptops (ideally\n            with Intel silicon).\n            For the EEG headset you will need an Android device with Bluetooth\n            connectivity.\n            We strongly encourage all teams to ensure that they have access to such\n            devices.\n            <br/><br/>\n            <b>\n            We will have a very limited number of Android devices available\n            </b>for teams that do not have access to one, but we cannot guarantee\n            that we will have enough for everyone.\n            Please fill in <a href=\"https://forms.gle/FQkiAFPthqyqAbGh6\" target=\"_blank\"> this form </a>\n            let us know ahead of time what hardware you or your team have available\n            to help us plan accordingly.\n            </Note>\n            </ContentSection>\n\n\n            <ContentSection title=\"X.on EEG headset\" title_id=\"#eeg\">\n            <p>\n            The <a href=\"https://xon-eeg.com/\" target=\"_blank\">X.on EEG headset</a> is\n            an affordable and easy\n            to use EEG headset. It's light and wireless, making it very portable yet\n            it's capable of\n            recording high quality EEG data from its 8 channels (+ reference) and\n            3-axis accelerometer.\n            </p>\n            <br />\n            <p>\n            To learn more about the X.on design and specifications, you can check the\n            website for the <a href=\"https://xon-eeg.com/\" target=\"_blank\">X.on EEG headset</a>.\n            On the day of the hackahton, we will provide the <Yellow>X.on user manual</Yellow>\n            describing how to setup and use the headset (also\n            seet this <a href=\"https://www.youtube.com/watch?v=2HwxGtheWJ8\" target=\"_blank\"> video</a>.\n            )\n            </p>\n\n                <ContentSubSection title=\"X.on software\" title_id=\"xsoftware\"> \n                <p>\n                <Green>Streaming data from the X.on</Green>. To\n                stream EEG data from the headset,\n                you will need to connect it to to an Android device with a Bluetooth\n                connection. The X.on user manual\n                will describe how to do this.\n                Once connected, go to \"monitor\" and the X.on app will stream the data over\n                WiFi using the <a href=\"https://labstreaminglayer.org/#/\"\n                    target=\"_blank\">Lab Streaming Layer (LSL)</a>.\n                <br/><br/>\n                To <Blue>read the data on your laptop</Blue>,\n                you can use the <a href=\"https://github.com/labstreaminglayer/pylsl\"\n                    target=\"_blank\">pylsl</a> Python library.\n                We recomend familiarizing yourself with\n                both LSL and pylsl before the hackathon.\n                <br/><br/>\n                This <b>code</b> shows how to stream eeg data in Python using pylsl:\n                </p>\n\n                <CodeBlock\n                    text={\n                        \n                        'Example program to show how to read a ',\n                        'multi-channel time series from LSL.'\n                    }\n                    language=\"phython\"\n                    theme={dracula}\n                />\n                </ContentSubSection>\n\n            </ContentSection>\n\n            \n        </div>\n    );\n};\n\nexport default HackathonMaterialsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}